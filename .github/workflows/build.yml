name: Build SpotifyPlaylistUpdater

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            output_name: SpotifyPlaylistUpdater.exe
            asset_name: SpotifyPlaylistUpdater-Windows.exe
          - os: macos-latest
            output_name: SpotifyPlaylistUpdater
            asset_name: SpotifyPlaylistUpdater-macOS
          - os: ubuntu-latest
            output_name: SpotifyPlaylistUpdater
            asset_name: SpotifyPlaylistUpdater-Linux

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 libxkbcommon-x11-0

      - name: Build with PyInstaller (Windows/Linux)
        if: matrix.os != 'macos-latest'
        run: pyinstaller spotifyplaylistupdater.spec

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Modify spec file for macOS to create app bundle
          python -c "
          with open('spotifyplaylistupdater.spec', 'r') as f:
              content = f.read()
          content = content.replace('exe = EXE(', 'app = BUNDLE(exe,')
          content = content.replace(')',', info_plist={\"NSHighResolutionCapable\": \"True\"}, bundle_identifier=\"com.spotifyplaylistupdater\")')
          content = content.replace('exe = EXE', 'exe = EXE')
          with open('spotifyplaylistupdater_mac.spec', 'w') as f:
              f.write(content)
          "
          pyinstaller spotifyplaylistupdater_mac.spec

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: dist/SpotifyPlaylistUpdater.exe

      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: dist/SpotifyPlaylistUpdater

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: dist/SpotifyPlaylistUpdater.app

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/${{ matrix.output_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
