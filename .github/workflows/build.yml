name: Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allows manual triggering

# Add explicit permissions block for the GITHUB_TOKEN
permissions:
  contents: write  # Required for creating releases and uploading artifacts

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            platform: win-x64
            extension: .exe
            artifact_name: SpotifyPlaylistUpdater-Windows
          - os: macos-latest
            platform: osx-x64
            extension: .dmg
            artifact_name: SpotifyPlaylistUpdater-macOS
          - os: ubuntu-latest
            platform: linux-x64
            extension: ''
            artifact_name: SpotifyPlaylistUpdater-Linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          pip install pillow  # Add Pillow for icon conversion

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libegl1 libxrandr2 libxss1 libxcursor1 libxcomposite1 libxi6 libxtst6 libxkbcommon-x11-0 \
            libxcb-render-util0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 \
            libxcb-shape0 libxcb-cursor0 libxcb-xinerama0 libxcb-xkb1

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          pyinstaller spotifyplaylistupdater.spec

      - name: Create macOS spec file
        if: matrix.os == 'macos-latest'
        run: |
          cat > spotifyplaylistupdater_mac.spec << 'EOF'
          # -*- mode: python ; coding: utf-8 -*-
          block_cipher = None

          a = Analysis(
              ['main_app.py'],
              pathex=[],
              binaries=[],
              hiddenimports=['PySide6.QtCore', 'PySide6.QtGui', 'PySide6.QtWidgets'],
              hookspath=[],
              runtime_hooks=[],
              excludes=[],
              win_no_prefer_redirects=False,
              win_private_assemblies=False,
              cipher=block_cipher,
              noarchive=False,
          )

          pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

          exe = EXE(
              pyz,
              a.scripts,
              [],
              exclude_binaries=True,
              name='SpotifyPlaylistUpdater',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=True,
              console=False,
              icon='src/assets/icon.ico',
          )

          coll = COLLECT(
              exe,
              a.binaries,
              a.zipfiles,
              a.datas,
              strip=False,
              upx=True,
              upx_exclude=[],
              name='SpotifyPlaylistUpdater',
          )

          app = BUNDLE(
              coll,
              name='SpotifyPlaylistUpdater.app',
              icon='src/assets/icon.ico',
              bundle_identifier='com.spotifyplaylistupdater',
              info_plist={
                  'NSHighResolutionCapable': True,
                  'NSPrincipalClass': 'NSApplication',
                  'CFBundleShortVersionString': '1.0.0',
              },
          )
          EOF

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: pyinstaller spotifyplaylistupdater_mac.spec

      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          pyinstaller spotifyplaylistupdater.spec

      - name: Create DMG for macOS
        if: matrix.os == 'macos-latest'
        run: |
          # Install create-dmg
          brew install create-dmg
          
          # Create DMG from the app bundle
          create-dmg \
            --volname "SpotifyPlaylistUpdater" \
            --volicon "src/assets/icon.ico" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "SpotifyPlaylistUpdater.app" 200 190 \
            --hide-extension "SpotifyPlaylistUpdater.app" \
            --app-drop-link 600 185 \
            "dist/SpotifyPlaylistUpdater.dmg" \
            "dist/SpotifyPlaylistUpdater.app"

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.os == 'windows-latest' && 'dist/SpotifyPlaylistUpdater.exe' || matrix.os == 'macos-latest' && 'dist/SpotifyPlaylistUpdater.dmg' || 'dist/SpotifyPlaylistUpdater' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.3.2
        with:
          name: Spotify Playlist Updater v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/SpotifyPlaylistUpdater-Windows/*
            artifacts/SpotifyPlaylistUpdater-macOS/*
            artifacts/SpotifyPlaylistUpdater-Linux/*
          body: |
            # Spotify Playlist Updater ${{ steps.get_version.outputs.VERSION }}
            
            ## Downloads
            - [Windows](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/SpotifyPlaylistUpdater.exe)
            - [macOS](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/SpotifyPlaylistUpdater.dmg)
            - [Linux](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/SpotifyPlaylistUpdater)
            
            ## Installation
            1. Download the appropriate file for your platform
            2. For macOS/Linux: Make executable with `chmod +x SpotifyPlaylistUpdater` (Linux only)
            3. Run the application
            
            For detailed instructions, see the [README](https://github.com/${{ github.repository }}/blob/master/README.md)
